@model PaginacionRespuesta

@{
    var plantillaLink = string.Concat(Model.BaseURL, "?pagina={0}&recordsPorPagina={1}");
    var activarBotonAnterior = Model.Pagina > 1;
    var activarBotonSiguiente = Model.Pagina < Model.CantidadTotalDePaginas;
}

<nav>
    <ul class="pagination">
        @*Boton para navegar hacia atrás*@
        @*Con disabled desbloqueo el botón cuando ste en la pg 1*@
        <li class="page-item @(activarBotonAnterior ? null : "disabled")">
            @if (activarBotonAnterior)
            {
               <a class="page-link" href="@string.Format(plantillaLink, Model.Pagina -1, Model.RecordsPorPagina)">
                Anterior

                </a>
            }
            else
            {
                <span class="page-link">Anterior</span>
            }

        </li> 

            
            

        @for (var pagina = 1; pagina <= Model.CantidadTotalDePaginas; pagina++)
        {
            //lógica. si la página actual es donde se encuentra el usuario la ilumino si no, no
            <li class="page-item @(pagina == Model.Pagina ? "active" : null)">
                <a class="page-link" href="@string.Format(plantillaLink, pagina, Model.RecordsPorPagina)">
                    @pagina

                </a>

            </li>

        
        }
        @*Boton para navegar hacia adelante*@
        @*Con disabled desbloqueo el botón cuando ste en la última pg*@
        <li class="page-item @(activarBotonSiguiente ? null : "disabled")">
            @if (activarBotonSiguiente)
            {
                <a class="page-link" href="@string.Format(plantillaLink, Model.Pagina +1, Model.RecordsPorPagina)">
                    Siguiente

                </a>
            }
            else
            {
                <span class="page-link">Siguiente</span>
            }

                

            </li>
    </ul>
</nav>